name: Build Docker Image

on:
  schedule:
    - cron: '0 4 * * *'

  workflow_dispatch:

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    
    steps:        
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Get tags
        run: git fetch --tags origin
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Installing Dependencies
        run: |
          sudo apt-get install -y jq curl git
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Get Jenkins Version
        id: get_jenkins_version
        run: |
          JENKINS_VERSION=$(curl -k -s https://api.rua.dev/versions/latest/jenkins | jq .data.version | sed s/\"//g)
          echo $JENKINS_VERSION
          echo "jenkins_version=$JENKINS_VERSION" >> $GITHUB_OUTPUT

      - name: Check Jenkins Version
        id: check_jenkins_version
        if: steps.get_jenkins_version.outputs.jenkins_version != ''
        run: |
          HAVE_TAG=false
          for tag in $(git tag); do
            echo $tag
            if [  "${{ steps.get_jenkins_version.outputs.jenkins_version }}" == "$tag" ]; then
              HAVE_TAG=true
            fi
          done

          if ! $HAVE_TAG; then
            git tag ${{ steps.get_jenkins_version.outputs.jenkins_version }}
            git push --tags
            echo "latest_jenkins_version=${{ steps.get_jenkins_version.outputs.jenkins_version }}" >> $GITHUB_OUTPUT

            SHA=$(curl -q -fsSL "https://repo.jenkins-ci.org/releases/org/jenkins-ci/main/jenkins-war/${{ steps.get_jenkins_version.outputs.jenkins_version }}/jenkins-war-${{ steps.get_jenkins_version.outputs.jenkins_version }}.war.sha256" )
            echo "latest_jenkins_sha=$SHA" >> $GITHUB_OUTPUT
          fi
            
      - name: Build and push
        uses: docker/build-push-action@v2
        if: steps.check_jenkins_version.outputs.latest_jenkins_version != ''
        with:
          file: ./Dockerfile
          context: .
          platforms: linux/arm64, linux/amd64
          build-args: |
            JENKINS_VERSION=${{ steps.check_jenkins_version.outputs.latest_jenkins_version }}
            JENKINS_SHA=${{ steps.check_jenkins_version.outputs.latest_jenkins_sha }}
          push: true
          no-cache: true
          tags: |
            ${{ secrets.DOCKER_NS }}/jenkins:${{ steps.check_jenkins_version.outputs.latest_jenkins_version }}
            ${{ secrets.DOCKER_NS }}/jenkins:latest
